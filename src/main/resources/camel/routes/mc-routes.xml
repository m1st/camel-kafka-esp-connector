<?xml version="1.0" encoding="UTF-8"?>
<routes xmlns="http://camel.apache.org/schema/spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <route id="mc_receive">
        <from uri="jms:{{mq.mc-to-esp}}?disableReplyTo=true"/>

        <log message="Got new message from {{mq.mc-to-esp}}" loggingLevel="INFO"/>
        <to uri="log:mc_receive?showAll=true&amp;level=DEBUG"/>

        <setHeader headerName="kafka.KEY">
            <xpath resultType="java.lang.String">//*[local-name()='PAN']/text()</xpath>
        </setHeader>
        <setHeader headerName="ESPFromSystem">
            <constant>mc</constant>
        </setHeader>
        <to uri="direct:do_receive"/>
    </route>


    <route id="mc_transform">
        <from uri="direct:mc_transform"/>
        <unmarshal><jacksonxml/></unmarshal>
        <transform>
            <groovy>
                /* Hack for empty tags. */
                def newBody = request.body.each({ it.value = it.value.trim() }).findAll({ it.value!=null &amp;&amp; it.value!='' })

                newBody['opcode'] = 'i'
                return newBody
            </groovy>
        </transform>
        <marshal><json library="Fastjson"/></marshal>
    </route>


    <route id="mc_test">
        <from uri="file:{{folder.test-mc-to-esp}}?delete=true"/>
        <log message="Got new file from {{folder.test-mc-to-esp}}" loggingLevel="INFO"/>

        <to uri="jms:{{mq.mc-to-esp}}"/>
        <log message="File from {{folder.test-mc-to-esp}} successfully put to {{mq.mc-to-esp}}" loggingLevel="INFO"/>
    </route>


    <route id="mc_answer">
        <from uri="kafka:esp.internal.esp.to.mc?groupId=group1"/>
        <unmarshal><json library="Fastjson" /></unmarshal>
        <log message="Got new message from esp.internal.esp.to.mc" loggingLevel="INFO"/>
        <to uri="log:mc_answer?showAll=true&amp;level=INFO"/>

        <transform>
            <groovy>
                def xmlWriter = new StringWriter()
                def mb = new groovy.xml.MarkupBuilder(xmlWriter)

                mb.'ns0:AuthorizationResponse'('ns0': 'urn:AF_MK_Entities')
                {
                    MTI(request.body.MTI)
                    PAN(request.body.PAN)
                    TRANCODE(request.body.TRANCODE)
                    FROMACCTTYPE(request.body.FROMACCTTYPE)
                    TOACCTTYPE(request.body.TOACCTTYPE)
                    AMOUNT(request.body.AMOUNT)
                    AMOUNTACCT(request.body.AMOUNTACCT)
                    GRDATETIME(request.body.GRDATETIME)
                    CONVRATE(request.body.CONVRATE)
                    SYSTRAN(request.body.SYSTRAN)
                    ORIGTIME(request.body.ORIGTIME)
                    ORIGDATE(request.body.ORIGDATE)
                    TERMSIC(request.body.TERMSIC)
                    TERMINSTCOUNTRY(request.body.TERMINSTCOUNTRY)
                    POSENTRYMODE(request.body.POSENTRYMODE)
                    CARDMEMBER(request.body.CARDMEMBER)
                    POSCONDITION(request.body.POSCONDITION)
                    REASON(request.body.REASON)
                    FEE(request.body.FEE)
                    TERMINSTID(request.body.TERMINSTID)
                    FORWIIC(request.body.FORWIIC)
                    TRACK2(request.body.TRACK2)
                    TRANNUMBER(request.body.TRANNUMBER)
                    APPROVALCODE(request.body.APPROVALCODE)
                    REASON2(request.body.REASON2)
                    ICC_RESPCODE(request.body.ICC_RESPCODE)
                    RETAINCARD(request.body.RETAINCARD)
                    RESPCODE(request.body.RESPCODE)
                    TERMNAME(request.body.TERMNAME)
                    TERMOWNER(request.body.TERMOWNER)
                    TERMCITY(request.body.TERMCITY)
                    TERMSTATE(request.body.TERMSTATE)
                    TERMCOUNTRY(request.body.TERMCOUNTRY)
                    TERMLOCATION(request.body.TERMLOCATION)
                    TERMBRANCH(request.body.TERMBRANCH)
                    TERMREGION(request.body.TERMREGION)
                    TERMCLASS(request.body.TERMCLASS)
                    TERMDATE(request.body.TERMDATE)
                    TERMPSNAME(request.body.TERMPSNAME)
                    TERMFINAME(request.body.TERMFINAME)
                    TERMRETAILERNAME(request.body.TERMRETAILERNAME)
                    TERMCOUNTY(request.body.TERMCOUNTY)
                    TERMZIP(request.body.TERMZIP)
                    TERMTIMEOFFSET(request.body.TERMTIMEOFFSET)
                    PINOK(request.body.PINOK)
                    CVVOK(request.body.CVVOK)
                    TRACK1(request.body.TRACK1)
                    OTHERTRANRRN(request.body.OTHERTRANRRN)
                    OTHERTRANPAN(request.body.OTHERTRANPAN)
                    CURRENCY(request.body.CURRENCY)
                    CURRENCYACCT(request.body.CURRENCYACCT)
                    PIN(request.body.PIN)
                    SECCONTRINF(request.body.SECCONTRINF)
                    AMOUNT2(request.body.AMOUNT2)
                    ICCDATA(request.body.ICCDATA)
                    ICCDATA_APPTRANSCOUNTER_9F36(request.body.ICCDATA_APPTRANSCOUNTER_9F36)
                    ICCDATA_TRANSSEQCOUNTER_9F41(request.body.ICCDATA_TRANSSEQCOUNTER_9F41)
                    AUTHFINAME(request.body.AUTHFINAME)
                    AUTHPSNAME(request.body.AUTHPSNAME)
                    EXTTRANATTR(request.body.EXTTRANATTR)
                    NEWPIN(request.body.NEWPIN)
                    MAC1(request.body.MAC1)
                    NETMANAGINFCODE(request.body.NETMANAGINFCODE)
                    REVACTUALAMOUNT(request.body.REVACTUALAMOUNT)
                    REVACTUALAMOUNTORIG(request.body.REVACTUALAMOUNTORIG)
                    RECVINSTID(request.body.RECVINSTID)
                    FROMACCT(request.body.FROMACCT)
                    TOACCT(request.body.TOACCT)
                    HOSTNETID(request.body.HOSTNETID)
                    LEGERBALANCE(request.body.LEGERBALANCE)
                    AVAILBALANCE(request.body.AVAILBALANCE)
                    BALANCECURRENCYACCT(request.body.BALANCECURRENCYACCT)
                    CURRENCYACCTTO(request.body.CURRENCYACCTTO)
                    CURRENCYORIG(request.body.CURRENCYORIG)
                    AMOUNTACCTTO(request.body.AMOUNTACCTTO)
                    AMOUNTORIG(request.body.AMOUNTORIG)
                    EXCHANGERATEACCT(request.body.EXCHANGERATEACCT)
                    EXCHANGERATEACCTTO(request.body.EXCHANGERATEACCTTO)
                    FINALRRN(request.body.FINALRRN)
                    TEXTMESS(request.body.TEXTMESS)
                    MULTIACCDATA(request.body.MULTIACCDATA)
                    MESSAGE(request.body.MESSAGE)
                    TOACCT2(request.body.TOACCT2)
                    TRANCATEGORY(request.body.TRANCATEGORY)
                    DRAFTCAPTURE(request.body.DRAFTCAPTURE)
                    CVV2(request.body.CVV2)
                    CLERK(request.body.CLERK)
                    INVOICENUM(request.body.INVOICENUM)
                    SEQNUM(request.body.SEQNUM)
                    CAVV(request.body.CAVV)
                    ECAUTHRESULTCODE(request.body.ECAUTHRESULTCODE)
                    ECAUTHTRACKNUM(request.body.ECAUTHTRACKNUM)
                    ECTRANID(request.body.ECTRANID)
                    MISCTRANSATTR1(request.body.MISCTRANSATTR1)
                    MISCTRANSATTR1_CAVVOK(request.body.MISCTRANSATTR1_CAVVOK)
                    MISCTRANSATTR1_TERMENTRYCAPS(request.body.MISCTRANSATTR1_TERMENTRYCAPS)
                    MISCTRANSATTR1_TERMCONTACTLESS(request.body.MISCTRANSATTR1_TERMCONTACTLESS)
                    MISCTRANSATTR1_ISSUERCOUNTRY(request.body.MISCTRANSATTR1_ISSUERCOUNTRY)
                    MISCTRANSATTR1_ISSUERCARDBRAND(request.body.MISCTRANSATTR1_ISSUERCARDBRAND)
                    MISCTRANSATTR1_AUTHFINAME2(request.body.MISCTRANSATTR1_AUTHFINAME2)
                    MISCTRANSATTR1_PAN2(request.body.MISCTRANSATTR1_PAN2)
                    MISCTRANSATTR1_CARDMEMBER2(request.body.MISCTRANSATTR1_CARDMEMBER2)
                    MISCTRANSATTR1_RESPCODE(request.body.MISCTRANSATTR1_RESPCODE)
                    MISCTRANSATTR1_P2PSEN_1(request.body.MISCTRANSATTR1_P2PSEN_1)
                    MISCTRANSATTR1_P2PSEN_4(request.body.MISCTRANSATTR1_P2PSEN_4)
                    MISCTRANSATTR1_P2PSEN_12_11_13(request.body.MISCTRANSATTR1_P2PSEN_12_11_13)
                    MISCTRANSATTR1_P2PSEN_15_14_16(request.body.MISCTRANSATTR1_P2PSEN_15_14_16)
                    MISCTRANSATTR1_TERMZIP(request.body.MISCTRANSATTR1_TERMZIP)
                    MISCTRANSATTR1_EXTTRANNUMBER(request.body.MISCTRANSATTR1_EXTTRANNUMBER)
                    MISCTRANSATTR1_DEBITRRN(request.body.MISCTRANSATTR1_DEBITRRN)
                    MISCTRANSATTR1_CATLEVEL(request.body.MISCTRANSATTR1_CATLEVEL)
                    MISCTRANSATTR1_WALLETDATA(request.body.MISCTRANSATTR1_WALLETDATA)
                    MISCTRANSATTR1_CBAMOUNT(request.body.MISCTRANSATTR1_CBAMOUNT)
                    MISCTRANSATTR2(request.body.MISCTRANSATTR2)
                    MISCTRANSATTR2_DECLINEREASON(request.body.MISCTRANSATTR2_DECLINEREASON)
                    MISCTRANSATTR2_EXTRESPCODE(request.body.MISCTRANSATTR2_EXTRESPCODE)
                    MISCTRANSATTR2_AUTHRESPTEXT(request.body.MISCTRANSATTR2_AUTHRESPTEXT)
                    MISCTRANSATTR2_ADDBAL(request.body.MISCTRANSATTR2_ADDBAL)
                    MISCTRANSATTR2_ADDBAL_AVBAL(request.body.MISCTRANSATTR2_ADDBAL_AVBAL)
                    MISCTRANSATTR2_ADDBAL_AVBALBEF(request.body.MISCTRANSATTR2_ADDBAL_AVBALBEF)
                    MISCTRANSATTR2_MPI(request.body.MISCTRANSATTR2_MPI)
                    MISCTRANSATTR2_OFPRISKLEVEL(request.body.MISCTRANSATTR2_OFPRISKLEVEL)
                    MISCTRANSATTR2_TERMADD_FID(request.body.MISCTRANSATTR2_TERMADD_FID)
                    MISCTRANSATTR2_TERMADD_SMID(request.body.MISCTRANSATTR2_TERMADD_SMID)
                    MISCTRANSATTR2_TERMADD_DWO(request.body.MISCTRANSATTR2_TERMADD_DWO)
                    MISCTRANSATTR2_TOKEND_DEVTYPE(request.body.MISCTRANSATTR2_TOKEND_DEVTYPE)
                    MISCTRANSATTR2_TOKEND_DEVID(request.body.MISCTRANSATTR2_TOKEND_DEVID)
                    MISCTRANSATTR2_TOKEND_DEVNUM(request.body.MISCTRANSATTR2_TOKEND_DEVNUM)
                    MISCTRANSATTR2_TOKEND_DEVNAME(request.body.MISCTRANSATTR2_TOKEND_DEVNAME)
                    MISCTRANSATTR2_TOKEND_DEVLOC(request.body.MISCTRANSATTR2_TOKEND_DEVLOC)
                    MISCTRANSATTR2_TOKEND_DEVIP(request.body.MISCTRANSATTR2_TOKEND_DEVIP)
                    MISCTRANSATTR2_TOKEND_DEVLANG(request.body.MISCTRANSATTR2_TOKEND_DEVLANG)
                    MISCTRANSATTR2_TOKEND_TREFID(request.body.MISCTRANSATTR2_TOKEND_TREFID)
                    MISCTRANSATTR2_TOKEND_TREQID(request.body.MISCTRANSATTR2_TOKEND_TREQID)
                    MISCTRANSATTR2_TOKEND_TSCORE(request.body.MISCTRANSATTR2_TOKEND_TSCORE)
                    MISCTRANSATTR2_TOKEND_WPRAV(request.body.MISCTRANSATTR2_TOKEND_WPRAV)
                    MISCTRANSATTR2_TOKEND_WPDEVSC(request.body.MISCTRANSATTR2_TOKEND_WPDEVSC)
                    MISCTRANSATTR2_TOKEND_WPACCSC(request.body.MISCTRANSATTR2_TOKEND_WPACCSC)
                    MISCTRANSATTR2_TRANCOND3DSEC(request.body.MISCTRANSATTR2_TRANCOND3DSEC)
                    ORIGINALINVOICENUM(request.body.ORIGINALINVOICENUM)
                    ORIGINALSEQNUM(request.body.ORIGINALSEQNUM)
                    PREAUTHHOLD(request.body.PREAUTHHOLD)>
                    ADDINF(request.body.ADDINF)
                    MAC2(request.body.MAC2)
                }

                return xmlWriter.toString()
            </groovy>
        </transform>

        <to uri="kafka:esp.external.esp.to.mc"/>
        <to uri="jms:{{mq.esp-to-mc}}"/>
    </route>
</routes>