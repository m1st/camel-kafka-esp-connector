<?xml version="1.0" encoding="UTF-8"?>
<routes xmlns="http://camel.apache.org/schema/spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- взять сообщение из папки и отправить в IBM MQ (в обход esp) для АРМ -->
    <route id="from_folder_to_arm_test">
        <from uri="file:{{folder.test-esp-to-arm}}?delete=true"/>
        <log message="Got new file from {{folder.test-esp-to-arm}}" loggingLevel="INFO"/>

        <to uri="kafka:camel.storage.af.arm.dev.xml"/>
        <log message="File from {{folder.test-esp-to-arm}} successfully put to kafka in camel.storage.af.arm.dev.xml topic" loggingLevel="INFO"/>

        <to uri="jms:{{mq.esp-to-arm}}"/>
        <log message="File from {{folder.test-esp-to-arm}} successfully put to {{mq.esp-to-arm}}" loggingLevel="INFO"/>
    </route>


    <!-- взять сообщение от АРМ (MQ) и положить в kafka topic -->
    <route id="mq_to_kafka_arm_to_esp">
        <from uri="jms:{{mq.arm-to-esp}}"/>
        <log message="Got new message from {{mq.arm-to-esp}}" loggingLevel="INFO"/>

        <to uri="kafka:camel.storage.arm.af.dev.xml"/>
        <log message="Message from {{mq.arm-to-esp}} successfully put to kafka in camel.storage.arm.af.dev.xml" loggingLevel="INFO"/>
    </route>

    <!-- взять сообщение из af(Kafka) и отправить в arm (MQ) -->
    <route id="from_esp_to_arm">
        <from uri="kafka:esp.camel.af.arm.dev.json?groupId=group1&amp;autoOffsetReset=earliest"/>
        <log message="Got new message from kafka topic esp.camel.af.arm.dev.json" loggingLevel="INFO"/>

        <unmarshal><json library="Fastjson" /></unmarshal>

        <transform>
            <groovy>
                def xmlBuilder = new groovy.xml.StreamingMarkupBuilder()
                writer = xmlBuilder.bind
                {
                    mkp.declareNamespace( ns0: "http://pochtabank.ru/sas/esp/" )
                    mkp.declareNamespace( ser: "http://schemas.microsoft.com/2003/10/Serialization/" )
                    mkp.declareNamespace( ent: "urn:AF_ARM_Entities" )
                    'ns0:AddPayment'
                    {
                            'ns0:MessageInfo'
                            {
                                'ent:RequestId'('b21C268b-AefD-ae8b-3B4C-ce0FB6CA6bCA') <!-- TODO: брать из JSON  -->
                                'ent:RequestGenerationTime'('2018-09-30T14:12:16') <!-- TODO: брать из JSON  -->
                            }
                            'ns0:Payment'
                            {
                                'ent:Id'('b82C268b-AefD-ae8b-3B4C-ce0FB6CA6bCA') <!-- TODO: брать из JSON  -->
                                'ent:PaymentDate'('2018-09-30T14:12:12') <!-- TODO: брать из JSON  -->
                                'ent:PaymentNumber'('20180930141212956562_1_D') <!-- TODO: брать из JSON  -->
                                'ent:ChequeNumber'('0') <!-- TODO: брать из JSON  -->
                                'ent:Service'('UNIFIELD LLC, Moscow, RU') <!-- TODO: брать из JSON  -->
                                'ent:Client'('Card') <!-- TODO: брать из JSON  -->
                                'ent:Point'('Интернет') <!-- TODO: брать из JSON  -->
                                'ent:Recipient'('Покупка') <!-- TODO: брать из JSON  -->
                                'ent:Amount'('1100.0') <!-- TODO: брать из JSON  -->
                                'ent:Commission'('0.0') <!-- TODO: брать из JSON  -->
                                'ent:Account'('QOfpPdux') <!-- TODO: брать из JSON  -->
                                'ent:ClientInfo'
                                {
                                    'ent:Id'('3216956') <!-- TODO: брать из JSON  -->
                                }
                                'ent:Requisites'
                                {
                                    'ent:Requisite'
                                    {
                                            'ent:Name'('PAN')
                                            'ent:Value'('1111120102221230') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Номер карты')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('FROMACCT')
                                            'ent:Value'('hTmnWXPN') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Номер счета, с которого проводилась транзакция')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('CLIENTID')
                                            'ent:Value'('3216956') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Идентификатор клиента')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TEMPCARDBLOCK')
                                            'ent:Value'('true') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Признак «блокировки карты» временным статусом')
                                     }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('ORIGTIME')
                                            'ent:Value'('1791567348') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Оригинальное время операции')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('ORIGDATE')
                                            'ent:Value'('551958453') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Оригинальная дата операции')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('MESSAGETYPEINFO')
                                            'ent:Value'('120 Authorization Advice') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Тип операции')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TRANCODEINFO')
                                            'ent:Value'('110 Покупка') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Код транзакции')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('AMOUNTACCT')
                                            'ent:Value'('110000') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Сумма транзакции с эквайринговой комиссией в валюте счета')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('CURRENCYACCT')
                                            'ent:Value'('643') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Код валюты счета клиента')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TERMNAME')
                                            'ent:Value'('QOfpPdux') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Имя терминала')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TERMRETAILERNAME')
                                            'ent:Value'('17TGII1L') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Идентификатор мерчанта')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TERMOWNER')
                                            'ent:Value'('UNIFIELD LLC, Moscow, RU') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Название ТСП (описание владельца терминала)')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TERMCOUNTRY')
                                            'ent:Value'('643') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Страна ТСП (ISO код страны терминала)')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TERMINSTID')
                                            'ent:Value'('5555555') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Идентификатор эквайера')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('RESPCODEINFO')
                                            'ent:Value'('68 Транзакция отвергнута внешним хостом') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Код ответа')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TERMSIC')
                                            'ent:Value'('7922') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('MCC')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('POSENTRYMODEINFO')
                                            'ent:Value'('011 manual key entry, can accept PIN') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Point of service entry mode')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('POSCONDITIONINFO')
                                            'ent:Value'('81 3D-Secure supported only by acquirer') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Point of service condition code')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('GRDATETIME')
                                            'ent:Value'('') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Дата и время транзакции по Гринвичу')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('ТERMLOCATION')
                                            'ent:Value'('HwK9CT1:') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Адрес терминала')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('APPROVALCODE')
                                            'ent:Value'('BEY9sV7M') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Идентификационный код ответа')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('PINOK')
                                            'ent:Value'('1') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Результат проверки PIN')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('CVVOK')
                                            'ent:Value'('1') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Результат проверки CVV/CVV2')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('TOACCT')
                                            'ent:Value'('gMkR7K.D') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Номер целевого счета')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('Check1')
                                            'ent:Value'('Siebel') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Тип проверки 1')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('Check2')
                                            'ent:Value'('') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Тип проверки 2')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('StrictCheck')
                                            'ent:Value'('false') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Строгость проверки')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('CallDirection')
                                            'ent:Value'('Исходящий звонок') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Направление звонка')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('CardStatus')
                                            'ent:Value'('Заблокирована') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Текущий статус карты')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('VIP')
                                            'ent:Value'('NotVIP') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Статус клиента')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('Priority')
                                            'ent:Value'('100') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Приоритет обработки')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('ScenarioId')
                                            'ent:Value'('4.2') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Номер сценария')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('AlertDescr')
                                            'ent:Value'('Подозрительные операции в рисковых сервисах') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Краткое описание условий срабатывания')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('ActionARM')
                                            'ent:Value'('Позвонить для подтверждения') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Действия при обработке')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('CardBlockReason')
                                            'ent:Value'('Блокировка в связи с подозрением на мошенничество') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Причина блокировки карты')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('Channel')
                                            'ent:Value'('CARD') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Канал совершения операции')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('SiebelSpecialCommentFlag')
                                            'ent:Value'('false') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Признак необходимости отправки специального комментария в Siebel')
                                    }

                                    'ent:Requisite'
                                    {
                                            'ent:Name'('SiebelSpecialComment')
                                            'ent:Value'('') <!-- TODO: брать из JSON  -->
                                            'ent:DisplayName'('Комментарий для Siebel')
                                    }
                                }

                                'ent:Reason'('Подозрительные операции в рисковых сервисах') <!-- TODO: брать из JSON  -->
                            }

                    }
                }

                return groovy.xml.XmlUtil.serialize(writer)

            </groovy>
        </transform>

        <to uri="kafka:camel.storage.af.arm.dev.xml"/>
        <log message="Message from kafka topic esp.camel.af.arm.dev.json successfully put to kafka in camel.storage.af.arm.dev.xml topic" loggingLevel="INFO"/>

        <to uri="jms:{{mq.esp-to-arm}}"/>
        <log message="Message from kafka topic esp.camel.af.arm.dev.json successfully put to MQ in {{mq.esp-to-arm}} queue" loggingLevel="INFO"/>
    </route>

</routes>